@page "/"
@namespace ImageMozaic.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>ImageMozaic</title>
    <base href="~/" />
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    <link href="css/site.css" rel="stylesheet" />
</head>
<body>
    <app>
        <component type="typeof(App)" render-mode="ServerPrerendered" />
    </app>

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    <script src="_framework/blazor.server.js"></script>
    <script>
        window.readFileAsBase64 = (fileInput) => {
            const readAsDataURL = (fileInput) => {
                return new Promise((resolve, reject) => {
                    const reader = new FileReader();
                    reader.onerror = () => {
                        reader.abort();
                        reject(new Error("Error reading file."));
                    };
                    reader.addEventListener("load", () => {

                        var image = new Image();
                        image.onload = function (imageEvent) {

                            // Resize the image

                            var canvas = document.createElement('canvas');
                            canvas.width = image.width;
                            canvas.height = image.height;
                            canvas.getContext('2d').drawImage(image, 0, 0, canvas.width, canvas.height);
                            var resizedImage = canvas.toDataURL('image/jpeg');

                            resolve(resizedImage);

                        }
                        image.src = reader.result;

                    }, false);
                    reader.readAsDataURL(fileInput.files[0]);
                });
            };
            debugger;
            console.log(readAsDataURL(fileInput));
            return readAsDataURL(fileInput);
        };
    </script>
</body>
</html>
